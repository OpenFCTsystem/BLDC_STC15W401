C51 COMPILER V9.01   MAIN_V20                                                              01/08/2015 08:36:55 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN_V20
OBJECT MODULE PLACED IN .\list\main-V20.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main-V20.c BROWSE DEBUG OBJECTEXTEND PRINT(.\list\main-V20.lst) OBJECT(.\li
                    -st\main-V20.obj)

line level    source

   1          
   2          /*---------------------------------------------------------------------*/
   3          /* --- STC MCU International Limited ----------------------------------*/
   4          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   5          /* --- Mobile: 13922805190 --------------------------------------------*/
   6          /* --- Fax: 0513-55012956,55012947,55012969 ---------------------------*/
   7          /* --- Tel: 0513-55012928,55012929,55012966 ---------------------------*/
   8          /* --- Web: www.GXWMCU.com   www.stcmcu.com ---------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* Èç¹ûÒªÔÚ³ÌÐòÖÐÊ¹ÓÃ´Ë´úÂë,ÇëÔÚ³ÌÐòÖÐ×¢Ã÷Ê¹ÓÃÁËºê¾§¿Æ¼¼µÄ×ÊÁÏ¼°³ÌÐò   */
  11          /*---------------------------------------------------------------------*/
  12          
  13          
  14          /*************  ¹¦ÄÜËµÃ÷        **************
  15          
  16          ±¾³ÌÐòÊÔÑéÊ¹ÓÃSTC15W401AS-35I-SOP16<RMB1.6>À´Çý¶¯º½Ä£ÓÃµÄÎÞ´«¸ÐÆ÷ÎÞË¢ÈýÏàÖ±Á÷Âí´ï.
  17          
  18          ±¾³ÌÐò²Î¿¼×ÔÍøÉÏµÄ´úÂë(×÷Õß: ÈðÉú), ¸ÄÁ¼¶øÀ´.
  19          
  20          µçÂ·Í¼¼ûÎÄ¼þ "BLDC-V10-ÊµÑéµçÂ·.pdf".
  21          
  22          ¿ØÖÆÐÅºÅÓÉP3.2ÊäÈëÕýÂö³åÐÅºÅ, ¼ä¸ô5~20ms, Âö³å¿í¶È1.000~1.610ms.
  23          
  24          1.160ms¿ªÊ¼Æô¶¯, 1.610msÎª×î¸ßËÙ¶È, ·Ö±æÂÊÎª2us.
  25          
  26          ±¾³ÌÐò½ö½öÊÇ¼òµ¥¿ØÖÆ, Èí¼þÃ»ÓÐ´¦Àí ¹ý0ÑÓÊ±30¶ÈÇÐ»» ¹ýÁ÷¼ì²â.
  27          
  28          ÓÉÓÚ¹ý0¼ì²â²¿·ÖÓÐRCÂË²¨, ËùÒÔ¸Ä±äµçÈÝÖµ¿ÉÒÔ´óÔ¼µÄ¶ÔÓ¦ÔÚ×î¸ßËÙÊ±ÑÓÊ±30¶ÈµÄÊ±¼ä.
  29          
  30          ÓÐÒâÕß¿É×ÔÐÐÍêÉÆµçÂ·ºÍ³ÌÐò.
  31          
  32          ******************************************/
  33          
  34          
  35          
  36          
  37          #define MAIN_Fosc               24000000L       //¶¨ÒåÖ÷Ê±ÖÓ
  38          
  39          #include "STC15Fxxxx.H"
  40          
  41          #define         MCU_PIN         16      /* Ñ¡ÔñMCUÒý½ÅÊý, Ö»Ö§³Ö16»ò20½Å(28½Å»ò32½Å¸ú20½ÅÒ»Ñù) */
  42          
  43          
  44          
  45          //CMPCR1
  46          #define CMPEN   0x80    //1: ÔÊÐí±È½ÏÆ÷, 0: ½ûÖ¹,¹Ø±Õ±È½ÏÆ÷µçÔ´
  47          #define CMPIF   0x40    //±È½ÏÆ÷ÖÐ¶Ï±êÖ¾, °üÀ¨ÉÏÉýÑØ»òÏÂ½µÑØÖÐ¶Ï, Èí¼þÇå0
  48          #define PIE             0x20    //1: ±È½Ï½á¹ûÓÉ0±ä1, ²úÉúÉÏÉýÑØÖÐ¶Ï
  49          #define NIE             0x10    //1: ±È½Ï½á¹ûÓÉ1±ä0, ²úÉúÏÂ½µÑØÖÐ¶Ï
  50          #define PIS             0x08    //ÊäÈëÕý¼«ÐÔÑ¡Ôñ, 0: Ñ¡ÔñÍâ²¿P5.5×öÕýÊäÈë,           1: ÓÉADCIS[2:0]ËùÑ¡ÔñµÄADCÊäÈë¶Ë×öÕ
             -ýÊäÈë.
  51          #define NIS             0x04    //ÊäÈë¸º¼«ÐÔÑ¡Ôñ, 0: Ñ¡ÔñÄÚ²¿BandGapµçÑ¹BGv×ö¸ºÊäÈë, 1: Ñ¡ÔñÍâ²¿P5.4×öÊäÈë.
  52          #define CMPOE   0x02    //1: ÔÊÐí±È½Ï½á¹ûÊä³öµ½P1.2, 0: ½ûÖ¹.
  53          #define CMPRES  0x01    //±È½Ï½á¹û, 1: CMP+µçÆ½¸ßÓÚCMP-,  0: CMP+µçÆ½µÍÓÚCMP-,  Ö»¶Á
C51 COMPILER V9.01   MAIN_V20                                                              01/08/2015 08:36:55 PAGE 2   

  54          
  55          //CMPCR2
  56          #define INVCMPO 0x80    //1: ±È½ÏÆ÷Êä³öÈ¡·´,  0: ²»È¡·´
  57          #define DISFLT  0x40    //1: ¹Ø±Õ0.1uFÂË²¨,   0: ÔÊÐí
  58          #define LCDTY   0x00    //0~63, ±È½Ï½á¹û±ä»¯ÑÓÊ±ÖÜÆÚÊý
  59          
  60          #if     (MCU_PIN == 20)
                      sbit PWM2_L = P3^4;
                      sbit PWM1_L = P3^5;
                      sbit PWM0_L = P3^6;
              #endif
  65          
  66          #if     (MCU_PIN == 16)
  67                  sbit PWM2_L = P5^5;
  68                  sbit PWM1_L = P3^3;
  69                  sbit PWM0_L = P3^6;
  70          #endif
  71          
  72          u8      Step;
  73          u8      PWM_Value; // ¾ö¶¨PWMÕ¼¿Õ±ÈµÄÖµ
  74          u16     RxPulseWide;
  75          bit     B_RxOk;
  76          bit     B_RUN;
  77          u8      PWW_Set;
  78          u8      cnt10ms;
  79          u8      Rx_cnt;
  80          u8      TimeOut;        //¶Â×ª³¬Ê±
  81          
  82          #define DISABLE_CMP_INT CMPCR1 &= ~0X40         // ¹Ø±Õ±È½ÏÆ÷ÖÐ¶Ï
  83          #define ENABLE_CMP_INT  CMPCR1 |= 0X40          // ´ò¿ª±È½ÏÆ÷ÖÐ¶Ï
  84          
  85          /*************************/
  86          
  87          void    Delay_n_ms(u8 dly)
  88          {
  89   1              u16     j;
  90   1              do
  91   1              {
  92   2                      j = MAIN_Fosc / 13000;  //ÑÓÊ±1ms, Ö÷³ÌÐòÔÚ´Ë½ÚÅÄÏÂÔËÐÐ
  93   2                      while(--j)      ;
  94   2              }while(--dly);
  95   1      }
  96          
  97          
  98          void delay_us(u8 us)
  99          {
 100   1              do
 101   1              {
 102   2                      NOP(20);        //@24MHz
 103   2              }
 104   1              while(--us);
 105   1      }
 106          
 107          void StepXL(void) // »»ÏàÐòÁÐº¯Êý
 108          {
 109   1       switch(Step)
 110   1        {
 111   2         case 0:  // AB
 112   2                              PWM0_L=0;       PWM2_L=0;
 113   2                              CCAP0H = PWM_Value;     CCAP1H=0;       CCAP2H=0;       // ´ò¿ªAÏàµÄ¸ß¶Ë
 114   2                              PWM1_L = 1;             // ´ò¿ªBÏàµÄµÍ¶Ë
 115   2                              ADC_CONTR = 0XED;       // Ñ¡ÔñP1.5×÷ÎªADCÊäÈë ¼´cÏàµçÑ¹
C51 COMPILER V9.01   MAIN_V20                                                              01/08/2015 08:36:55 PAGE 3   

 116   2                              CMPCR1 = 0x9C;          //bit7=1 ÔÊÐí±È½ÏÆ÷, bit4=1 ±È½Ï½á¹ûÓÉ1±ä0, ²úÉúÏÂ½µÑØÖÐ¶Ï (²»ÄÜÏìÓ¦ÏÂ½µÑØÖÐ¶Ï?)
 117   2                              break;
 118   2         case 1:  // AC
 119   2                              PWM0_L=0;       PWM1_L=0;
 120   2                              CCAP0H = PWM_Value;     CCAP1H=0;       CCAP2H=0;       // ´ò¿ªAÏàµÄ¸ß¶Ë
 121   2                              PWM2_L = 1;                     // ´ò¿ªCÏàµÄµÍ¶Ë
 122   2                              ADC_CONTR = 0XEC;       // Ñ¡ÔñP1.4×÷ÎªADCÊäÈë ¼´BÏàµçÑ¹
 123   2                              CMPCR1 = 0xAC;          //ÉÏÉýÑØÖÐ¶Ï
 124   2               
 125   2            break;
 126   2         case 2:  // BC
 127   2                              PWM0_L=0;       PWM1_L=0;
 128   2                              CCAP0H=0;       CCAP2H=0;       CCAP1H = PWM_Value; // ´ò¿ªBÏàµÄ¸ß¶Ë
 129   2                              PWM2_L = 1;                     // ´ò¿ªCÏàµÄµÍ¶Ë
 130   2                              ADC_CONTR = 0XEB;       // Ñ¡ÔñP1.3×÷ÎªADCÊäÈë ¼´aÏàµçÑ¹
 131   2                              CMPCR1 = 0x9C;          //ÏÂ½µÑØÖÐ¶Ï
 132   2            break;
 133   2         case 3:  // BA
 134   2                              PWM1_L=0;       PWM2_L=0;
 135   2                              CCAP0H=0;       CCAP2H=0;       CCAP1H = PWM_Value; // ´ò¿ªBÏàµÄ¸ß¶Ë
 136   2                              PWM0_L = 1;                     // ´ò¿ªAÏàµÄµÍ¶Ë
 137   2                              ADC_CONTR = 0XED;       // Ñ¡ÔñP1.5×÷ÎªADCÊäÈë ¼´cÏàµçÑ¹ 
 138   2                              CMPCR1 = 0xAC;          //ÉÏÉýÑØÖÐ¶Ï
 139   2                              
 140   2            break;
 141   2         case 4: // CA
 142   2                              PWM1_L=0;       PWM2_L=0;
 143   2                              CCAP0H=0;       CCAP1H=0;       CCAP2H = PWM_Value; // ´ò¿ªCÏàµÄ¸ß¶Ë
 144   2                              PWM0_L = 1;                     // ´ò¿ªAÏàµÄµÍ¶Ë
 145   2                              ADC_CONTR = 0XEC;       // Ñ¡ÔñP1.4×÷ÎªADCÊäÈë ¼´BÏàµçÑ¹
 146   2                              CMPCR1 = 0x9C;          //ÏÂ½µÑØÖÐ¶Ï
 147   2            break;
 148   2         case 5: // CB
 149   2                      PWM0_L=0;       PWM2_L=0;
 150   2                              CCAP0H=0;       CCAP1H=0;       CCAP2H = PWM_Value;// ´ò¿ªCÏàµÄ¸ß¶Ë
 151   2                      PWM1_L = 1;                     // ´ò¿ªBÏàµÄµÍ¶Ë
 152   2                              ADC_CONTR = 0XEB;       // Ñ¡ÔñP1.3×÷ÎªADCÊäÈë ¼´aÏàµçÑ¹
 153   2                              CMPCR1 = 0xAC;          //ÉÏÉýÑØÖÐ¶Ï
 154   2               
 155   2                      break;
 156   2               
 157   2              default:
 158   2                      break;
 159   2        }     
 160   1      }
 161          
 162          
 163          
 164          void PWM_Init(void)
 165          {
 166   1              PWM0_L = 0;
 167   1              PWM1_L = 0;
 168   1              PWM2_L = 0;
 169   1              
 170   1      #if     (MCU_PIN == 20)
                      P3n_push_pull(0x70);
              #endif
 173   1      #if     (MCU_PIN == 16)
 174   1              P3n_push_pull(0x48);
 175   1              P5n_push_pull(0x20);
 176   1      #endif
 177   1      
C51 COMPILER V9.01   MAIN_V20                                                              01/08/2015 08:36:55 PAGE 4   

 178   1      //      CMOD = 1 << 1; //Ñ¡ÔñÏµÍ³Ê±ÖÓ/2ÎªÊ±ÖÓÔ´£¬¼´PWMÆµÂÊ=24M/2/256=46.9K
 179   1              CMOD = 5 << 1; //Ñ¡ÔñÏµÍ³Ê±ÖÓ/4ÎªÊ±ÖÓÔ´£¬¼´PWMÆµÂÊ=24M/4/256=23.4K
 180   1      //      CMOD = 6 << 1; //Ñ¡ÔñÏµÍ³Ê±ÖÓ/6ÎªÊ±ÖÓÔ´£¬¼´PWMÆµÂÊ=24M/6/256=15.6K
 181   1              CL=0;                   // PCA¼ÆÊýÆ÷ÇåÁã
 182   1              CH=0;
 183   1              
 184   1              PCA_PWM0 = 0X00;
 185   1              CCAP0H=0;    // ³õÊ¼»¯Õ¼¿Õ±ÈÎª0% HµÄÖµ×°ÔØµ½LÖÐ
 186   1              CCAP0L=0;
 187   1              CCAPM0=0x42;    // ÉèÖÃÎªPWMÄ£Ê½
 188   1              
 189   1              PCA_PWM1 = 0X00;
 190   1              CCAP1H=0;    // ³õÊ¼»¯Õ¼¿Õ±ÈÎª0%
 191   1              CCAP1L=0;
 192   1              CCAPM1=0x42;    // ÉèÖÃÎªPWMÄ£Ê½
 193   1              
 194   1              PCA_PWM2 = 0X00;
 195   1              CCAP2H=0;    // ³õÊ¼»¯Õ¼¿Õ±ÈÎª0%
 196   1              CCAP2L=0;
 197   1              CCAPM2=0x42;    // ÉèÖÃÎªPWMÄ£Ê½
 198   1              
 199   1              CR = 1;
 200   1      }
 201          
 202          void ADC_Init(void)
 203          {
 204   1              P1n_pure_input(0x38);
 205   1              P1ASF = 0X38; // ¿ªÍ¨P1.3 P1.4 P1.5µÄADÊäÈë¿Ú
 206   1      }
 207          
 208          void CMP_INT(void) interrupt 21
 209          {
 210   1              CMPCR1 &= ~0X40; // ÐèÈí¼þÇå³ýÖÐ¶Ï±êÖ¾Î»
 211   1              if(Step<5)      Step++;
 212   1              else            Step = 0;
 213   1              StepXL();
 214   1              TimeOut = 10;   //10ms³¬Ê±
 215   1      }
 216          
 217          void CMP_Init(void)
 218          {
 219   1              CMPCR1 = 0X8C;  // 1000 1100 ´ò¿ª±È½ÏÆ÷£¬P5.4×÷Îª±È½ÏÆ÷µÄ·´ÏàÊäÈë¶Ë£¬ADCÒý½Å×÷ÎªÕýÊäÈë¶Ë 
 220   1              CMPCR2 = 60;    // 60¸öÊ±ÖÓÂË²¨
 221   1              P5n_pure_input(0x10);
 222   1      }
 223          
 224          u8 StartMotor(void)
 225          {
 226   1              u16 timer,i;
 227   1              DISABLE_CMP_INT;        // ½ûÖ¹±È½ÏÆ÷ÖÐ¶Ï
 228   1              PWM_Value = 30;         // ³õÊ¼Õ¼¿Õ±È=16/256=6%
 229   1              Step = 0;
 230   1              StepXL();                       // ³õÊ¼Î»ÖÃ
 231   1              Delay_n_ms(5);//delay_ms(5);
 232   1              timer = 300;
 233   1      
 234   1              while(1)
 235   1              {
 236   2                      for(i=0; i<timer; i++)  delay_us(50);  //
 237   2                      timer -= timer /15 + 1;
 238   2                      if(timer < 25)  return(1);
 239   2                      if( Step < 5)   Step++;
C51 COMPILER V9.01   MAIN_V20                                                              01/08/2015 08:36:55 PAGE 5   

 240   2                      else                    Step = 0;
 241   2                      StepXL();
 242   2              }
 243   1      }
 244          
 245          void T0_Iint(void)
 246          {
 247   1              Timer0_AsTimer();       /* Ê±Æ÷0ÓÃ×ö¶¨Ê±Æ÷      */
 248   1              Timer0_12T();           /* Timer0 clodk = fo/12 12·ÖÆµ, default */
 249   1              Timer0_16bit();
 250   1              Timer0_Gate_INT0_P32(); /* Ê±Æ÷0ÓÉÍâ²¿INT0¸ßµçÆ½ÔÊÐí¶¨Ê±¼ÆÊý */
 251   1              TH0 = 0;
 252   1              TL0 = 0;
 253   1              TR0 = 1; // ´ò¿ª¶¨Ê±Æ÷0
 254   1              ET0 = 1;// ÔÊÐíET0ÖÐ¶Ï
 255   1      }
 256          
 257          void T0_Interrupt(void) interrupt 1
 258          {
 259   1              Rx_cnt = 0;                     //Ò»µ©³öÏÖÒç³ö, Ôò¿ªÊ¼µÄn¸öÂö³åÎÞÐ§
 260   1              RxPulseWide = 1000;     //Í£Ö¹
 261   1              B_RxOk = 1;                     //ÐéÄâÊÕµ½Ò»¸öÂö³å
 262   1      }
 263          
 264          /********************* INT0ÖÐ¶Ïº¯Êý *************************/
 265          void INT0_int (void) interrupt INT0_VECTOR
 266          {
 267   1              u16     j;
 268   1              
 269   1              TR0 = 0;
 270   1              j = ((u16)TH0 << 8) + TL0;
 271   1              TH0 = 0;
 272   1              TL0 = 0;
 273   1              TR0 = 1;
 274   1      
 275   1              if(++Rx_cnt >= 5)       Rx_cnt = 5;
 276   1              j >>= 1;        //ÎªÁËºÃ´¦Àí, ×ª³Éµ¥Î»Îªus
 277   1              if((j >= 800) && (j <= 2000) && (Rx_cnt == 5))
 278   1              {
 279   2                      RxPulseWide = j;
 280   2                      B_RxOk = 1;             //±êÖ¾ÊÕµ½Ò»¸öÂö³å
 281   2              }
 282   1      
 283   1      }
 284          
 285          
 286          /**********************************************/
 287          void main(void)
 288          {
 289   1              u16 j;
 290   1      
 291   1              PWM_Init();
 292   1              ADC_Init();
 293   1              CMP_Init();
 294   1              T0_Iint();
 295   1      
 296   1              IE0 = 0;        // Çå³ýÍâÖÐ¶Ï0±êÖ¾Î»
 297   1              EX0 = 1;        // INT0 Enable
 298   1              IT0 = 1;        //INT0 ÏÂ½µÑØÖÐ¶Ï
 299   1              
 300   1              RxPulseWide = 1000;
 301   1              PWW_Set = 0;
C51 COMPILER V9.01   MAIN_V20                                                              01/08/2015 08:36:55 PAGE 6   

 302   1              cnt10ms = 0;
 303   1              Rx_cnt  = 0;
 304   1              TimeOut = 0;
 305   1      
 306   1              EA  = 1; // ´ò¿ª×ÜÖÐ¶Ï
 307   1              
 308   1              while (1)
 309   1              {
 310   2                      Delay_n_ms(1);  //ÑÓÊ±1ms, Ö÷³ÌÐòÔÚ´Ë½ÚÅÄÏÂÔËÐÐ
 311   2      
 312   2                      if(TimeOut > 0)
 313   2                      {
 314   3                              if(--TimeOut == 0)      //¶Â×ª³¬Ê±
 315   3                              {
 316   4                                      CCAP0H=0;       CCAP1H=0;       CCAP2H=0;  // Õ¼¿Õ±ÈÎª0
 317   4                                      PWM0_L=0;       PWM1_L=0;       PWM2_L=0;
 318   4                                      DISABLE_CMP_INT; // ¹Ø±È½ÏÆ÷ÖÐ¶Ï
 319   4                                      Delay_n_ms(250);        //¶Â×ªÊ±,ÑÓÊ±1ÃëÔÙÆô¶¯
 320   4                                      Delay_n_ms(250);
 321   4                                      Delay_n_ms(250);
 322   4                                      Delay_n_ms(250);
 323   4      
 324   4                                      RxPulseWide = 1000;
 325   4                                      PWW_Set   = 0;
 326   4                                      PWM_Value = 0;
 327   4                                      B_RxOk = 0;
 328   4                                      B_RUN  = 0;
 329   4                                      Rx_cnt = 0;
 330   4                                      TimeOut = 0;
 331   4                              }
 332   3                      }
 333   2                      
 334   2                      if(B_RxOk)      //ÊÕµ½Ò»¸öÂö³å
 335   2                      {
 336   3                              B_RxOk = 0;
 337   3                              j = RxPulseWide;
 338   3                              if(j >= 1100)                           // 1100~1610¶ÔÓ¦PWMÕ¼¿Õ±ÈÖµ0~255
 339   3                              {
 340   4                                      j = (j - 1100) >> 1;    //2us¶ÔÓ¦PWMÒ»¸ö²½½ø
 341   4                                      if(j > 256)     j = 255;
 342   4                              }
 343   3                              else    j = 0;
 344   3                              PWW_Set = (u8)j;
 345   3                      }
 346   2                      
 347   2                      if(!B_RUN && (PWW_Set >= 30))           // PWM_Set >= 30, ²¢ÇÒÂí´ïÎ´ÔËÐÐ, ÔòÆô¶¯Âí´ï
 348   2                      {
 349   3                              StartMotor();   // Æô¶¯Âí´ï
 350   3                              CMPCR1 &= ~0X40; // ÐèÈí¼þÇå³ýÖÐ¶Ï±êÖ¾Î»
 351   3                              ENABLE_CMP_INT; // ´ò¿ª±È½ÏÆ÷ÖÐ¶Ï
 352   3                              B_RUN = 1;
 353   3                              TimeOut = 0;
 354   3                      }
 355   2                      
 356   2                      
 357   2                      if(++cnt10ms >= 10)             // 10msÊ±Ï¶
 358   2                      {
 359   3                              cnt10ms = 0;
 360   3                              if(B_RUN)
 361   3                              {
 362   4                                      if(PWM_Value < PWW_Set) PWM_Value++;
 363   4                                      if(PWM_Value > PWW_Set) PWM_Value--;
C51 COMPILER V9.01   MAIN_V20                                                              01/08/2015 08:36:55 PAGE 7   

 364   4                                      if(PWM_Value < 20)      // Í£×ª
 365   4                                      {
 366   5                                              PWM_Value = 0;
 367   5                                              B_RUN = 0;
 368   5                                              CCAP0H=0;       CCAP1H=0;       CCAP2H=0;  // Õ¼¿Õ±ÈÎª0
 369   5                                              PWM0_L=0;       PWM1_L=0;       PWM2_L=0;
 370   5                                              DISABLE_CMP_INT; // ¹Ø±È½ÏÆ÷ÖÐ¶Ï
 371   5                                      }
 372   4                              }
 373   3                      }
 374   2              
 375   2              }
 376   1      }
 377          
 378          
 379          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    771    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
